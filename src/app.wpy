<style lang="less">
    .container {
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        box-sizing: border-box;
    }
</style>

<script>
    import wepy from 'wepy'
    import 'wepy-async-function'
    export default class extends wepy.app {
        config = {
            //指定小程序由哪些页面组成
            pages: [
                'pages/componentList', //第一页
                'pages/index', //首页（第一项）
                'pages/swiper', //滑动组件
                'pages/demo', //官方示例
                'pages/conpoments/coverImage' //coverImage 组件
            ],
            //设置小程序的状态栏、导航条、标题、窗口背景色
            window: {
                backgroundTextStyle: 'light',
                navigationBarBackgroundColor: '#fff',
                navigationBarTitleText: 'WeChat',
                navigationBarTextStyle: 'black'
            },
            //配置tabBar
            tabBar: {
                color: "#999",
                selectedColor: "#f01d24",
                backgroundColor: "#fff",
                borderStyle: "black",
                list: [{
                    text: "首页",
                    pagePath: "pages/componentList",
                    iconPath: "assets/images/home.png",
                    selectedIconPath: "assets/images/home_active.png"
                }, {
                    text: "滑动组件",
                    pagePath: "pages/swiper",
                    iconPath: "assets/images/component.png",
                    selectedIconPath: "assets/images/component_active.png"
                }, {
                    text: "官方例子",
                    pagePath: "pages/demo",
                    iconPath: "assets/images/demo.png",
                    selectedIconPath: "assets/images/demo_active.png"
                }]
            }
        }
        globalData = {
            userInfo: null
        }
        constructor() {
            super()
            this.use('requestfix')
        }
        onLaunch() {
            this.testAsync();
        }
        sleep(s) {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    resolve('promise resolved')
                }, s * 1000)
            })
        }
        async testAsync() {
            const data = await this.sleep(3)
            console.log(data)
        }
        getUserInfo(cb) {
            const that = this
            if (this.globalData.userInfo) {
                return this.globalData.userInfo
            }
            wepy.getUserInfo({
                success(res) {
                    that.globalData.userInfo = res.userInfo
                    cb && cb(res.userInfo)
                }
            })
        }
    }
</script>
